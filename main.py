from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from mimetypes import init

from pip._internal.vcs import git


class TestState(StatesGroup):
    Waiting_for_first_voice = State()
    Waiting_for_second_voice = State()
    Waiting_for_third_voice = State()
    Waiting_for_fourth_voice = State()

class AdminState(StatesGroup):
    Waiting_for_user_id = State()
    Waiting_for_message = State()

bot = Bot(token='6332956391:AAH8fEw597EqewnLwMj64XNTlgOqfXRxpCo')
dp = Dispatcher(bot, storage=MemoryStorage())



@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    inline_kb = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å', callback_data='button_clicked')
    inline_kb.add(btn)
    print(f"User ID = {message.from_user.id}")
    await bot.send_message(message.chat.id,
                           '–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –ø—Ä–æ–π—Ç–∏ —É—Å—Ç–Ω—ã–π —Ç–µ—Å—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–≥–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æüå∏\n\n'
                           'üñáÔ∏è–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n\n'
                           '‚ñ´Ô∏è<b>–î–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã</b> –Ω–∞ 4 —Å–æ–æ–±—â–µ–Ω–∏—è. <b>–í–æ–ø—Ä–æ—Å—ã</b> –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ.\n\n'
                           '‚ñ´Ô∏è1 —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ = <b>1 –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç</b>, –∏—Ç–æ–≥–æ 4 –æ—Ç–≤–µ—Ç–∞.\n\n'
                           '‚ñ´Ô∏è<b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</b> –∫–∞–∂–¥–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ <b>–Ω–µ –±–æ–ª–µ–µ 2 –º–∏–Ω—É—Ç</b>.\n\n'
                           '‚ñ´Ô∏è<b>–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–≤–µ—Ç–∏—Ç—å</b> –Ω–∞ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤, <b>–ø—Ä–æ–∏–∑–Ω–µ—Å–∏</b> —Ñ—Ä–∞–∑—É <b>‚ÄúI don‚Äôt know‚Äù</b>.\n\n'
                           '‚ñ´Ô∏è–ù–µ –≤–æ–ª–Ω—É–π—Å—è, –æ—Ç–≤–µ—á–∞–π –≤ —Å–≤–æ–µ–º —Ç–µ–º–ø–µ –∏ <b>good luck</b>))\n\n'
                           '<b>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å</b>.',
                           parse_mode = 'html', reply_markup=inline_kb)


@dp.callback_query_handler(lambda c: c.data == 'button_clicked')
async def on_button_click(call: types.CallbackQuery):
    await bot.send_message(call.message.chat.id, 'What‚Äôs your name? How‚Äôre you?')
    await TestState.Waiting_for_first_voice.set()

@dp.message_handler(state=TestState.Waiting_for_first_voice, content_types=['voice'])
async def process_first_voice(message: types.Message, state: FSMContext):
    await state.update_data(
        first_voice=message.voice.file_id
    )
    await bot.send_message(message.chat.id, 'What do you usually do in your free time?')
    await TestState.next()

@dp.message_handler(state=TestState.Waiting_for_second_voice, content_types=['voice'])
async def process_second_voice(message: types.Message, state: FSMContext):
    await state.update_data(
        second_voice=message.voice.file_id
    )
    await bot.send_message(message.chat.id, 'How long have you been studying English? (+ tell me about your experience of learning English).')
    await TestState.next()

@dp.message_handler(state=TestState.Waiting_for_third_voice, content_types=['voice'])
async def process_third_voice(message: types.Message, state: FSMContext):
    await state.update_data(
        third_voice=message.voice.file_id
    )
    await bot.send_message(message.chat.id, 'What‚Äôre the problems associated with learning English at an upper-intermediate or advanced level? How can you continue to make progress?')
    await TestState.next()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
@dp.message_handler(state=TestState.Waiting_for_fourth_voice, content_types=['voice'])
async def process_fourth_voice(message: types.Message, state: FSMContext):
    data = await state.get_data()
    await bot.send_message(chat_id=1499426060, text = f'–ü—Ä–æ–≤–µ—Ä—å —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.username} {message.from_user.first_name} {message.from_user.last_name} {message.from_user.id}')
    await bot.send_voice(chat_id=1499426060, voice=data.get('first_voice'), caption='–ü–µ—Ä–≤–æ–µ –∞—É–¥–∏–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    await bot.send_voice(chat_id=1499426060, voice=data.get('second_voice'), caption='–í—Ç–æ—Ä–æ–µ –∞—É–¥–∏–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    await bot.send_voice(chat_id=1499426060, voice=data.get('third_voice'), caption='–¢—Ä–µ—Ç—å–µ –∞—É–¥–∏–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    await bot.send_voice(chat_id=1499426060, voice=message.voice.file_id, caption='–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ –∞—É–¥–∏–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    await state.finish()
    inline_kb = types.InlineKeyboardMarkup()
    btn_chek = types.InlineKeyboardButton('–ß–ï–ö-–õ–ò–°–¢', callback_data='btn_chek')
    btn_tel = types.InlineKeyboardButton('–¢–ì-–ö–ê–ù–ê–õ', callback_data='btn_tel')
    btn_ind = types.InlineKeyboardButton('–ü–†–û–ú–û–ö–û–î –ù–ê –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï', callback_data='btn_ind')
    btn_group = types.InlineKeyboardButton('–ü–†–û–ú–û–ö–û–î –ù–ê –ì–†–£–ü–ü–û–í–´–ï', callback_data='btn_group')
    inline_kb.add(btn_chek, btn_tel, btn_ind, btn_group)
    await bot.send_message(message.chat.id,
                           '–£ —Ç–µ–±—è –ø–æ–ª—É—á–∏–ª–æ—Å—åü§©\n\n'
                           '‚ÄºÔ∏è<b>–û—Ç–≤–µ—Ç</b> –ø—Ä–∏–¥–µ—Ç <b>–≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏</b> –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –ï–ª–∏–∑–∞–≤–µ—Ç–æ–π @english_liza.\n\n'
                           '‚úÖ –ó–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞—Ä—é —Ç–µ–±–µ <b>–ø—Ä–æ–º–æ–∫–æ–¥</b> –Ω–∞ —Å–∫–∏–¥–∫—É <b>10% –Ω–∞ –æ–¥–Ω–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ</b> —Å –ï–ª–∏–∑–∞–≤–µ—Ç–æ–π.\n\n'
                           '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>¬´–ü–†–û–ú–û–ö–û–î –ù–ê –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï¬ª</b> –Ω–∏–∂–µ.üå∏\n\n'
                           '‚úÖ –¢–∞–∫–∂–µ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å <b>–ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 10%</b> –Ω–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç <b>–Ω–∞ 4 –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∑–∞–Ω—è—Ç–∏—è</b>.\n\n'
                           '–ì—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è:\n\n'
                           'üíé –æ—Ç–ª–∏—á–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –¥–ª—è –∏–∑–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç —è–∑—ã–∫–æ–≤–æ–≥–æ –±–∞—Ä—å–µ—Ä–∞; \n'
                           'üíé –≥—Ä—É–ø–ø–æ–≤—ã–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–≥–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ;\n'
                           'üíé —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–Ω–æ–≥–æ –∑–∞–ø–∞—Å–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏; \n'
                           'üíé —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤–æ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏–π.\n\n'
                           '–ù–∞–∂–∏–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>¬´–ü–†–û–ú–û–ö–û–î –ù–ê –ì–†–£–ü–ü–û–í–´–ï¬ª –Ω–∏–∂–µ.üå∏</b> –Ω–∏–∂–µ.\n\n'
                           '‚úÖ –ó–∞–±–∏—Ä–∞–π <b>–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç</b> ¬´20 —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π, —á—Ç–æ–±—ã –∑–≤—É—á–∞—Ç—å –∫–∞–∫ –Ω–æ—Å–∏—Ç–µ–ª—å üá∫üá∏¬ª.\n\n'
                           '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>¬´–ß–ï–ö-–õ–ò–°–¢¬ª</b> –Ω–∏–∂–µ.üå∏',
                           parse_mode = 'html', reply_markup=inline_kb)

@dp.callback_query_handler(lambda c: c.data == 'btn_chek')
async def on_button_click(call: types.CallbackQuery):
    await bot.send_message(call.message.chat.id, 'https://t.me/english_liza/180')

@dp.callback_query_handler(lambda c: c.data == 'btn_tel')
async def on_button_click(call: types.CallbackQuery):
    await bot.send_message(call.message.chat.id, 'https://t.me/english_liza')


@dp.callback_query_handler(lambda c: c.data == 'btn_ind')
async def on_button_click(call: types.CallbackQuery):
    await bot.send_message(call.message.chat.id, '–¢–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è INDZN10. –ù–∞–ø–∏—à–∏ –µ–≥–æ –º–Ω–µ –≤ –ª—Å @Lizaveta_Rozhkova –∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ.')


@dp.callback_query_handler(lambda c: c.data == 'btn_group')
async def on_button_click(call: types.CallbackQuery):
    await bot.send_message(call.message.chat.id, '–¢–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –≥—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è GRPZN10. –ù–∞–ø–∏—à–∏ –µ–≥–æ –º–Ω–µ –≤ –ª—Å @Lizaveta_Rozhkova –∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ.')

@dp.message_handler(state='*', user_id=1499426060)
async def admin_handler(message: types.Message, state: FSMContext):
    if not str(await state.get_state()):
        await AdminState.Waiting_for_user_id.set()
    else:
        await state.update_data(admin_id=message.from_user.id)

        if message.text.isdigit():
            await state.update_data(user_id=message.text)
            await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
            await AdminState.next()
        else:
            data = await state.get_data()
            user_id = data.get('user_id')

            if user_id:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await bot.send_message(chat_id=user_id, text=message.text)
                await state.finish()
            else:
                await bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp)
